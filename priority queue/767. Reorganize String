767. Reorganize String
https://leetcode.com/problems/reorganize-string/discuss/128907/Java-solution-99-similar-to-358
Given a string S, check if the letters can be rearranged so that two characters that are adjacent to each other are not the same.

If possible, output any possible result.  If not possible, return the empty string.

Example 1:

Input: S = "aab"
Output: "aba"
public String reorganizeString(String S) {
	StringBuilder res = new StringBuilder();
	Map<Character, Integer> hm = new HashMap<>();
	for (char c : S.toCharArray()) {
		hm.put(c, hm.getOrDefault(c, 0) + 1);
	}
	PriorityQueue<Map.Entry<Character, Integer>> pq = new PriorityQueue<>((a, b) -> b.getValue() - a.getValue());
	pq.addAll(hm.entrySet());
	Map.Entry<Character, Integer> prev = null;
	while (!pq.isEmpty()) {
		Map.Entry<Character, Integer> entry = pq.poll();
		if (prev != null && prev.getValue() > 0) {
			pq.offer(prev);
		}
		res.append((char) entry.getKey());
		entry.setValue(entry.getValue() - 1);

		prev = entry;
	}

	return (res.length() == S.length()) ? res.toString() : "";
}
