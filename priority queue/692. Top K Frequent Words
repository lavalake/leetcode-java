NOte, default priorityQueue is minHeap.
for comparator, defaule is return a - b. If return negative, means a less then b, a will be on top.
If want a maxHeap, use costom comparator return b - a

class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        PriorityQueue<Map.Entry<String, Integer>> pq = new PriorityQueue<>(new Comparator<Map.Entry<String, Integer>>() {
            public int compare(Map.Entry<String, Integer> a, Map.Entry<String, Integer> b) {
                if (a.getValue() == b.getValue()) return a.getKey().compareTo(b.getKey());
                else return b.getValue() - a.getValue();
            }
        });
        Map<String, Integer> freq = new HashMap<>();
        for (String str : words) {
            freq.put(str, freq.getOrDefault(str, 0)+1);
        }
        for (Map.Entry<String, Integer> entry : freq.entrySet()) {
            pq.offer(entry);
        }
        List<String> ret = new ArrayList<>();
        while (k>0 && !pq.isEmpty()) {
            ret.add(pq.poll().getKey());
            k--;
        }
        return ret;
    }
}
