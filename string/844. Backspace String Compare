https://leetcode.com/problems/backspace-string-compare/description/
Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.

Example 1:

Input: S = "ab#c", T = "ad#c"
Output: true
Explanation: Both S and T become "ac".
https://leetcode.com/problems/backspace-string-compare/discuss/135873/8-lines-C++-O(1)-space-easy-to-understand

/*
ab##
c#d#

"nzp#o#g"
"b#nzp#o#g"
*/
class Solution {
    public boolean backspaceCompare(String S, String T) {
        int index1 = S.length() - 1;
        int index2 = T.length() - 1;
        int cnt1 = 0, cnt2 = 0;
        //here we should use ||, we need go through both strings. Maybe one string is short then the other
        //see test case 2
        while (index1 >= 0 || index2 >= 0) {
            //we need go through untill # cnt reach 0
            //that means if we found 2 # we need go left 2 to skip 2 letters
            //if after skip 2 letters, we see # again, we need continue the loop
            //see test case 1
            while (index1 >=0 && (S.charAt(index1) == '#' || cnt1 > 0)) {
                if (S.charAt(index1) == '#') cnt1++;
                else cnt1--;
                index1--;
            }
            while (index2 >= 0 && (T.charAt(index2) == '#' || cnt2 > 0)) {
                if (T.charAt(index2) == '#') {
                    cnt2++;
                }else {
                    cnt2--;
                }
                index2--;
            }
            
            if (index1 < 0 || index2 < 0) return index1 == index2;
            if (S.charAt(index1) != T.charAt(index2)) return false;
            index1--;
            index2--;
        }
        return index1 == index2;
    }
}
