247. Strobogrammatic Number II


//special case 00
//00 can only be added except head and tail. so we need to pass the length down
//we need to check in the recersion whether now we are at the outer most layer
class Solution {
    String[][] map = new String[][] {{"0","0"}, {"1", "1"}, {"8", "8"}, {"9", "6"}, {"6", "9"}};
    public List<String> findStrobogrammatic(int n) {
        List<String> res = new ArrayList<>();
        return helper(n, n);
    }
    private List<String> helper(int n, int m) {
        List<String> res = new ArrayList<>();
        if (n == 0) {
            return Arrays.asList("");
        } 
        if (n == 1) {
            return Arrays.asList("0", "1", "8");
        }
        List<String> temp = helper(n-2, m);
        for (String str : temp) {
            for (int i=0; i<map.length; i++) {
                if (n == m && i == 0) continue;
                res.add(map[i][0] + str + map[i][1]);
            }
        }
        return res;
    }
}
