https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/description/
Convert a BST to a sorted circular doubly-linked list in-place. Think of the left and right pointers as synonymous 
to the previous and next pointers in a doubly-linked list.

class Solution {
    public Node treeToDoublyList(Node root) {
        if (root == null) return null;
        Node head = new Node();
        Node pre = head;
        Deque<Node> stack = new LinkedList<>();
        while (root != null || !stack.isEmpty()) {
            while (root != null) {
                stack.push(root);
                root = root.left;
            }
            root = stack.pop();
            pre.right = root;
            root.left = pre;
            pre = root;
            root = root.right;
        }
        pre.right = head.right;
        head.right.left = pre;
        return head.right;
    }
}
