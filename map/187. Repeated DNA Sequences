/*
use bit map to compress the string
one int has 32 bit, use 1 2 3 to represent C G T. then for 10 char, we need 20 bits every 2 bits for one char
to compress the space required
*/
public List<String> findRepeatedDnaSequences(String s) {
        Map<Integer, Integer> map = new HashMap<>();
        List<String> res = new ArrayList<>();
        int[] value = new int[26];
        value['C'-'A'] = 1;
        value['G' - 'A'] = 2;
        value['T' - 'A'] = 3;
        for (int i=0; i<=s.length()-10; i++) {
            int key = 0;
            
            String str = s.substring(i, i+10);
            for (int j=0; j<str.length(); j++) {
                key = (key << 2) | (value[str.charAt(j) - 'A']);
            }
            if (!map.containsKey(key)) {
                map.put(key, 1);
            } else if (map.get(key) == 1){
                res.add(str);
                map.put(key, map.get(key)+1);
            }
        }
        return res;
    }
