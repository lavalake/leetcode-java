74. Search a 2D Matrix

240. Search a 2D Matrix II
https://leetcode.com/problems/search-a-2d-matrix-ii/discuss/66140/My-concise-O(m+n)-Java-solution
We start search the matrix from top right corner, initialize the current position to top right corner, if the target is
greater than the value in current position, then the target can not be in entire row of current position because the 
row is sorted, if the target is less than the value in current position, then the target can not in the entire column
because the column is sorted too. We can rule out one row or one column each time, so the time complexity is O(m+n).
/*
1  2  3  4  5
6  7  8  9  10
11 12 13 14 15
16 17 18 19 20
21 22 23 24 25 

if mid > target that means the down right side 1/4 should be discarded
if mid < target, that means the up left side 1/4 should be discarded
*/
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if (matrix.length ==0 || matrix[0].length == 0) return false;
        int row = 0, col = matrix[0].length-1;
        while (row < matrix.length && col >= 0) {
            if (matrix[row][col] == target) return true;
            else if (matrix[row][col] > target) col--;
            else row++;
        }
        return false;
    }
    private boolean searchSubMatrix(int[][] matrix, int target, int rowL, int rowR, int colL, int colR) {
        if (rowL > rowR || colL > colR) return false;
        if (target > matrix[rowR][colR] || target < matrix[rowL][colL]) return false;
        
            int midRow = rowL + (rowR - rowL)/2;
            int midCol = colL + (colR - colL)/2;
            if (matrix[midRow][midCol] == target) return true;
            else if (matrix[midRow][midCol] < target) {
                if (searchSubMatrix(matrix, target, midRow+1, rowR, colL, midCol) || 
                   searchSubMatrix(matrix, target, rowL, midRow, midCol+1, colR) ||
                   searchSubMatrix(matrix, target, midRow+1, rowR, midCol+1, colR)) return true;
            } else {
                
                if (searchSubMatrix(matrix, target, rowL, midRow, colL, midCol) ||
                    searchSubMatrix(matrix, target, midRow+1, rowR, colL, midCol) ||
                    searchSubMatrix(matrix, target, rowL, midRow, midCol+1, colR)) return true;
            }
        return false;
    }
}
