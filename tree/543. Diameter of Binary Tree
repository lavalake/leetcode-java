https://leetcode.com/problems/diameter-of-binary-tree/description/
/*Pay attention that we define "The diameter of a binary tree is the length of the longest path between any 
two nodes in a tree" in the problem, that is why we update with "max = Math.max(max, left + right);" 
instead of "max = Math.max(max, left + right + 1);".*/
class Solution {
    int max = 0;
    public int diameterOfBinaryTree(TreeNode root) {
        helper(root);
        return max;
    }
    private int helper(TreeNode root) {
        if (root == null) return 0;
        int left = helper(root.left);
        int right = helper(root.right);
        max = Math.max(max, left + right);
        return Math.max(left+1, right+1);
    }
}
