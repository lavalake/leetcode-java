In a string S of lowercase letters, these letters form consecutive groups of the same character.

For example, a string like S = "abbxxxxzyy" has the groups "a", "bb", "xxxx", "z" and "yy".

Call a group large if it has 3 or more characters.  We would like the starting and ending positions of every large group.

The final answer should be in lexicographic order.

 /**************************
 此题重点是边界条件的确定
 每次与start做比较，不要与前后做比较。会简化边界条件
 推出第二层while的条件是到达队尾活着遇到不同的字符。这样最后一个如果与前面字符相同，也可以cover住
 注意：：：：：最后一个字符相同的情况。容易忽略
 **************************/

Example 1:

Input: "abbxxxxzzy"
Output: [[3,6]]
Explanation: "xxxx" is the single large group with starting  3 and ending positions 6.
class Solution {
    public List<List<Integer>> largeGroupPositions(String S) {
        List<List<Integer>> ret = new ArrayList<>();
        char[] arr = S.toCharArray();
        int start = 0, index = 0, len = arr.length;
        while (index < len) {
            while (index < len && arr[index] == arr[start]) {
                index++;
                
            }
            if (index - start >= 3) ret.add(Arrays.asList(start, index-1));
            start = index;

        }
        return ret;
    }
}
