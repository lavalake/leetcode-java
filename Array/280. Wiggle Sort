https://leetcode.com/problems/wiggle-sort/description/
Given an unsorted array nums, reorder it in-place such that nums[0] <= nums[1] >= nums[2] <= nums[3]....
if nums[1] < nums[2], swap 1 and 2. because 1 >= 0 and 1 < 2, so after swap, 2 > 0
class Solution {
    public void wiggleSort(int[] nums) {
        for (int i=0; i<nums.length-1; i++) {
            if (i%2==0 && nums[i]>nums[i+1]) swap(nums,i,i+1);
            if (i%2==1 && nums[i]<nums[i+1]) swap(nums,i,i+1);
        }
    }
    private void swap(int[] nums, int l, int r)
    {
        int temp = nums[l];
        nums[l] = nums[r];
        nums[r] = temp;
    }
}
