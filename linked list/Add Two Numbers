445. Add Two Numbers II
create a dummy node as head to point to the head.
1. reverse two list
2. add every node until both list reach end and carry is 0
3. reverse the list
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode rl1 = reverseList(l1);
        ListNode rl2 = reverseList(l2);
        ListNode head = new ListNode(-1);
        ListNode runner = head;
        int carry = 0;
        while (rl1 != null || rl2 != null || carry != 0) {
            int sum = carry;
            if (rl1 != null) {
                sum += rl1.val;
                rl1 = rl1.next;
            }
            if (rl2 != null) {
                sum += rl2.val;
                rl2 = rl2.next;
            }
            carry = sum / 10;
            ListNode newNode = new ListNode(sum % 10);
            runner.next = newNode;
            runner = newNode;
        }
        runner.next = null;
        return reverseList(head.next);
    }
    private ListNode reverseList(ListNode head) {
        ListNode cur = head;
        ListNode pre = null;
        while (cur != null) {
            ListNode next = cur.next;
            cur.next = pre;
            pre = cur;
            cur = next;
        }
        return pre;
    }
}
