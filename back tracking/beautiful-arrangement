https://leetcode.com/problems/beautiful-arrangement/discuss/99707/Java-Solution-Backtracking
http://www.cnblogs.com/grandyang/p/6533276.html
此题关键是为每一个pos遍历整个0-N。helper方程如下
for(int i=num; i>0; i--)
为每一个pos都调用这个helper， 每次都是从N到0遍历，用visited标记是否已经访问过。

那么这里我们需要一个visited数组来记录数字是否已经访问过，因为优美排列中不能有重复数字。我们用变量pos来标记已经生成的数字的个数，如果大于N了，说明已经找到了一组排列，结果res自增1。在for循环中，i应该从1开始，因为我们遍历1到N中的所有数字，如果该数字未被使用过，且满足和坐标之间的整除关系，那么我们标记该数字已被访问过，再调用下一个位置的递归函数，之后不要忘记了恢复初始状态，
