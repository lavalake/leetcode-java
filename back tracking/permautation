1. Letter Case Permutation
https://leetcode.com/problems/letter-case-permutation/description/
When I saw a problem, my first step is to draw a figure. See the figure below:
abc
abc Abc 0
abc aBc Abc ABc 1
abc abC aBc aBC Abc AbC ABc ABC 2

There we go! Is that a typical BFS/DFS problem? Yes, you are right!
Be careful to check whether a character is a digit or a letter(lower case or upper case).
这个问题不需要改变字母顺序，所以不需要循环。只需要DFS即可。

main() -> helper(s, 0, ret)
              if (digit) helper(s, i+1, ret)
              toLowercase(s[i]) helper(s, i+1, ret)
              toUppercase(s[i]) helper(s, i+1, ret)
              
2. Palindrome Permutation
https://leetcode.com/problems/palindrome-permutation/description/

this one only need to return false or true does not need to return all the cases. So we can use hashtable.

3. Palindrome Permutation II
https://leetcode.com/problems/palindrome-permutation-ii/description/

