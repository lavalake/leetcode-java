https://leetcode.com/problems/champagne-tower/discuss/118660/20ms-C++-Easy-understand-solution

If the glass >=1, we should split the diff (glass - 1) into next level.

/*
special case
4, 0, 0
4, 1, 1
so need to check whehter it's larger than 1 when return
*/
class Solution {
    public double champagneTower(int poured, int query_row, int query_glass) {
        double[] row = new double[query_row+1];
        row[0] = poured;
        for (int i=1; i<=query_row; i++) {
            double[] temp = new double[query_row+1];
            for (int j=0; j<i ; j++) {
                //need to check whether cur is larger than 1
                if (row[j] > 1) {
                    temp[j] += (row[j] - 1)/2.0;
                    temp[j+1] += (row[j] - 1)/2.0;
                }
                    
                
            }
            row = temp;
        }
        return row[query_glass]>1?1:row[query_glass];
    }
}
