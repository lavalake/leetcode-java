class Solution {
    public int longestPalindromeSubseq(String s) {
        int[][] dp = new int[s.length()][s.length()];
        for (int i=0; i<s.length(); i++) {
            //need from i to 0 because cur state depend on [j+1][i], so we need to calculate [j+1][i] first
            for (int j=i; j>=0; j--) {
                if (s.charAt(i) == s.charAt(j)) {
                    if (i <= j+2) dp[j][i] = i - j + 1;
                    else dp[j][i] = dp[j+1][i-1] + 2;
                } else {
                    dp[j][i] = Math.max(dp[j][i-1], dp[j+1][i]);
                }
            }
        }
        return dp[0][s.length()-1];
    }
}
