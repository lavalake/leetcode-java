https://leetcode.com/problems/maximal-square/discuss/61935/6-lines-Visual-Explanation-O(mn)
What's the largest (full-of-ones-)square ending at (i,j), meaning lower right corner in row i, column j? 
Imagine there are 4x4 squares above, above-left and left of it:
above  above-left  left

 1111     1111
 1111     1111     1111
 1111     1111     1111
 1111     1111     1111
    *         *    1111*
    Clearly, if cell (i,j) itself is 1 as well, then there's a 5x5 square ending at (i,j). And if there were 5x5 
    squares above, above-left and left of it, then we'd have a 6x6. So to find the largest square ending at (i,j), 
    we just take the minimum size of squares ending at (i-1,j), (i-1,j-1) and (i,j-1), and add 1.
    
    public class Solution {
    public int maximalSquare(char[][] matrix) {
        if (matrix.length==0 || matrix[0].length==0) return 0;
        int[][] dp = new int[matrix.length][matrix[0].length];
        int maxLen = 0;
        for (int i=0; i<matrix.length; i++) {
            if (matrix[i][0] == '1') {
                dp[i][0] = 1;
                maxLen = 1;
            }
        }
        for (int i=0; i<matrix[0].length; i++) {        
            if (matrix[0][i] == '1') {
                dp[0][i] = 1;
                maxLen = 1;
            }
                
        }
        for (int i=1; i<matrix.length; i++) {
            for (int j=1; j<matrix[0].length; j++) {
                if (matrix[i][j] == '1') {
                    dp[i][j] = Math.min(Math.min(dp[i-1][j-1],dp[i-1][j]), dp[i][j-1]) + 1;
                    maxLen = Math.max(maxLen, dp[i][j]);
                }
            }
        }
        return maxLen*maxLen;
    }
}
