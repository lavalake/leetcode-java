256. Paint House
https://leetcode.com/problems/paint-house/description/
There are a row of n houses, each house can be painted with one of the three colors: red, blue or green. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.

The cost of painting each house with a certain color is represented by a n x 3 cost matrix. For example, costs[0][0] is the cost of painting house 0 with color red; costs[1][2] is the cost of painting house 1 with color green, and so on... Find the minimum cost to paint all houses.

Note:
All costs are positive integers.

Example:

Input: [[17,2,17],[16,16,5],[14,3,19]]
Output: 10
Explanation: Paint house 0 into blue, paint house 1 into green, paint house 2 into blue. 
             Minimum cost: 2 + 5 + 3 = 10.
minRed(n) = Math.min(blue(n-1),green(n-1)) + red;

class Solution {
    public int minCost(int[][] costs) {
        int costRed = 0, costBlue = 0, costGreen = 0;
        for (int[] cost : costs) {
            int newCostRed = Math.min(costBlue, costGreen) + cost[0];
            int newCostBlue = Math.min(costRed, costGreen) + cost[1];
            int newCostGreen = Math.min(costRed, costBlue) + cost[2];
            costRed = newCostRed;
            costBlue = newCostBlue;
            costGreen = newCostGreen;
        }
        return costRed < Math.min(costBlue,costGreen)?costRed:Math.min(costBlue,costGreen);
    }
}
