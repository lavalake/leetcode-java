https://leetcode.com/problems/implement-trie-prefix-tree/description/
class Trie {
    Node root;
    /** Initialize your data structure here. */
    public Trie() {
        root = new Node();
    }
    
    /** Inserts a word into the trie. */
    public void insert(String word) {
        Node temp = root;
        for (char c : word.toCharArray()) {
            if (temp.children[c-'a'] == null) {
                temp.children[c-'a'] = new Node();
            }
            temp = temp.children[c-'a'];
        }
        temp.isLeaf = true;
    }
    
    /** Returns if the word is in the trie. */
    public boolean search(String word) {
        Node temp = root;
        for (char c : word.toCharArray()) {
            if (temp.children[c-'a'] == null) return false;
            else temp = temp.children[c-'a'];
        }
        return temp.isLeaf;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String prefix) {
        Node temp = root;
        for (char c : prefix.toCharArray()) {
            if (temp.children[c-'a'] == null) return false;
            else temp = temp.children[c-'a'];
        }
        return true;
    }
    public static class Node {
        public Node[] children;
        public boolean isLeaf;
        public Node() {
            children = new Node[26];
            isLeaf = false;
        }
    }
}
